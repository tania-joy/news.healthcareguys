{"version":3,"sources":["webpack:///path---assignmentdetails-yx-nza-wdub-w-vud-do-3-mte-b33ed0b51a9117bd536e.js","webpack:///./.cache/json/assignmentdetails-yx-nza-wdub-w-vud-do-3-mte.json"],"names":["webpackJsonp","664","module","exports","data","assignments","id","title","description","pathContext"],"mappings":"AAAAA,cAAc,gBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,aAAeC,GAAA,uBAAAC,MAAA,kGAAAC,YAAA,g4BAAqhCC,aAAgBH,GAAA","file":"path---assignmentdetails-yx-nza-wdub-w-vud-do-3-mte-b33ed0b51a9117bd536e.js","sourcesContent":["webpackJsonp([7685611316715],{\n\n/***/ 664:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"assignments\":{\"id\":\"YXNzaWdubWVudDo3MTE=\",\"title\":\"Learn about \\\"DeepTriage\\\" to see how we can incorporate into Call Bell, Attest, Watchtower, etc.\",\"description\":\"For a given software bug report, identifying an appropriate developer who could potentially fix the bug is the primary task of a bug triaging process. A bug title (summary) and a detailed description is present in most of the bug tracking systems. Automatic bug triaging algorithm can be formulated as a classification problem, which takes the bug title and description as the input, mapping it to one of the available developers (class labels). The major challenge is that the bug description usually contains a combination of free unstructured text, code snippets, and stack trace making the input data highly noisy.\\r\\n\\r\\nThese same techniques should be used by Citus Health Call Bell to do auto-triage based on questions -- perhaps finding the right user to assign a chat message to based on its content. Same for Watchtower logs and feedback and Opsfolio Attest's answers to questions.\"}},\"pathContext\":{\"id\":\"YXNzaWdubWVudDo3MTE=\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---assignmentdetails-yx-nza-wdub-w-vud-do-3-mte-b33ed0b51a9117bd536e.js","module.exports = {\"data\":{\"assignments\":{\"id\":\"YXNzaWdubWVudDo3MTE=\",\"title\":\"Learn about \\\"DeepTriage\\\" to see how we can incorporate into Call Bell, Attest, Watchtower, etc.\",\"description\":\"For a given software bug report, identifying an appropriate developer who could potentially fix the bug is the primary task of a bug triaging process. A bug title (summary) and a detailed description is present in most of the bug tracking systems. Automatic bug triaging algorithm can be formulated as a classification problem, which takes the bug title and description as the input, mapping it to one of the available developers (class labels). The major challenge is that the bug description usually contains a combination of free unstructured text, code snippets, and stack trace making the input data highly noisy.\\r\\n\\r\\nThese same techniques should be used by Citus Health Call Bell to do auto-triage based on questions -- perhaps finding the right user to assign a chat message to based on its content. Same for Watchtower logs and feedback and Opsfolio Attest's answers to questions.\"}},\"pathContext\":{\"id\":\"YXNzaWdubWVudDo3MTE=\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/assignmentdetails-yx-nza-wdub-w-vud-do-3-mte.json\n// module id = 664\n// module chunks = 7685611316715"],"sourceRoot":""}